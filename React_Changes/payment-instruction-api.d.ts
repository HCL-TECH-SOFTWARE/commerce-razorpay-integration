/**
 * HCL Commerce Transaction server Services
 * These services provide APIs to interact with transaction
 *
 * The version of the OpenAPI document: 9.1.6
 *
 * (C) Copyright HCL Technologies Limited 2021
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../../../../../configuration';
import { RequestArgs, BaseAPI } from '../../../../../base';
import { CartPaymentInstruction, CreateRazorPayOrder } from '../../../../../com/hcl/commerce/typescript/axios';
import { ComIbmCommerceEdpBeansEDPSensitiveDataMaskHelperDataBeanIBMSensitiveDataMaskByPlainString } from '../../../../../com/hcl/commerce/typescript/axios';
import { ComIbmCommerceRestOrderHandlerPaymentInstructionHandlerPaymentInstructionList } from '../../../../../com/hcl/commerce/typescript/axios';
/**
 * PaymentInstructionApi - axios parameter creator
 * @export
 */
export declare const PaymentInstructionApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Adds payment instructions to the shopping cart.
     * @summary Add payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {CartPaymentInstruction} [body] The body data required for the REST method.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionAddPaymentInstruction: (storeId: string, responseFormat?: string | undefined, body?: CartPaymentInstruction | undefined, options?: any) => Promise<RequestArgs>;
    createRazorPayOrder: (storeId: string, responseFormat?: string | undefined, body?: any, options?: any) => Promise<RequestArgs>;
    /**
     * Deletes all payment instructions from the shopping cart.
     * @summary Delete payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionDeleteAllPaymentInstructions: (storeId: string, responseFormat?: string | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * Deletes payment instructions from the shopping cart.
     * @summary Delete payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} paymentInstructionId Payment instruction identifier to delete.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionDeletePaymentInstruction: (storeId: string, paymentInstructionId: string, responseFormat?: string | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * Gets payment instructions for the shopping cart.
     * @summary Get payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {string} [currency] The currency code to use for example, currency&#x3D;USD. If no currency code is specified, the store default currency is used.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionGetPaymentInfo: (storeId: string, responseFormat?: string | undefined, currency?: string | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * Gets payment instruction for the punch-out payment.
     * @summary Get punch-out payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} orderId The order identifier.
     * @param {string} piId The payment instruction identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {string} [currency] The currency code to use for example, currency&#x3D;USD. If no currency code is specified, the store default currency is used.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionGetPunchoutPaymentInfo: (storeId: string, orderId: string, piId: string, responseFormat?: string | undefined, currency?: string | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * Gets sensitive data mask information for plain string.
     * @summary Get sensitive data mask information
     * @param {string} storeId The store identifier.
     * @param {string} plainString The plain string for the sensitive data.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {string} [profileName] Profile name. Profiles determine the subset of data returned by a query.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionGetSensitiveDataMaskByPlainString: (storeId: string, plainString: string, responseFormat?: string | undefined, profileName?: string | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * Processes punch-out call back requests.
     * @summary Process punch-out call back request
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionPunchoutPaymentCallBack: (storeId: string, responseFormat?: string | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * Processes the punch-out payment requests.
     * @summary Process payment punch-out request
     * @param {string} storeId The store identifier.
     * @param {string} orderId The order identifier.
     * @param {string} piId The payment instruction identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionRepay: (storeId: string, orderId: string, piId: string, responseFormat?: string | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * Updates a payment instruction in the shopping cart.
     * @summary Update payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {CartPaymentInstruction} [body] Request body.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionUpdatePaymentInstruction: (storeId: string, responseFormat?: string | undefined, body?: CartPaymentInstruction | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * Gets payment instructions for the shopping cart.
     * @summary fetch payment token data.
     * @param {string} storeId The store identifier.
     * @param {string} paymentToken payment_token
     * @param {string} paymentMethod payment_method
     * @param {string} [responseFormat] The response format. If the request has an input body, that body must also use the format specified in \&quot;responseFormat\&quot;. Valid values include \&quot;json\&quot; and \&quot;xml\&quot; without the quotes. If the responseFormat isn\&#39;t specified, the \&quot;accept\&quot; HTTP header shall be used to determine the format of the response. If the \&quot;accept\&quot; HTTP header isn\&#39;t specified as well, the default response format shall be in json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    storeStoreIdCartSelfPaymentInstructionPaymentTokenGet: (storeId: string, paymentToken: string, paymentMethod: string, responseFormat?: string | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * Gets sensitive data mask information for plain string.
     * @summary Get sensitive data mask information
     * @param {string} storeId The store identifier.
     * @param {string} [profileName] The plain string for the sensitive data.
     * @param {string} [responseFormat] The response format. If the request has an input body, that body must also use the format specified in \&quot;responseFormat\&quot;. Valid values include \&quot;json\&quot; and \&quot;xml\&quot; without the quotes. If the responseFormat isn\&#39;t specified, the \&quot;accept\&quot; HTTP header shall be used to determine the format of the response. If the \&quot;accept\&quot; HTTP header isn\&#39;t specified as well, the default response format shall be in json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    storeStoreIdCartSelfPaymentInstructionSensitiveDataMaskByPlainStringGet: (storeId: string, profileName?: string | undefined, responseFormat?: string | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * PaymentInstructionApi - functional programming interface
 * @export
 */
export declare const PaymentInstructionApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Adds payment instructions to the shopping cart.
     * @summary Add payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {CartPaymentInstruction} [body] The body data required for the REST method.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionAddPaymentInstruction(storeId: string, responseFormat?: string | undefined, body?: CartPaymentInstruction | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ComIbmCommerceRestOrderHandlerPaymentInstructionHandlerPaymentInstructionList>>;
    createRazorPayOrder(storeId: string, responseFormat?: string | undefined, body?: any, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ComIbmCommerceRestOrderHandlerPaymentInstructionHandlerPaymentInstructionList>>;
    /**
     * Deletes all payment instructions from the shopping cart.
     * @summary Delete payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionDeleteAllPaymentInstructions(storeId: string, responseFormat?: string | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     * Deletes payment instructions from the shopping cart.
     * @summary Delete payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} paymentInstructionId Payment instruction identifier to delete.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionDeletePaymentInstruction(storeId: string, paymentInstructionId: string, responseFormat?: string | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     * Gets payment instructions for the shopping cart.
     * @summary Get payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {string} [currency] The currency code to use for example, currency&#x3D;USD. If no currency code is specified, the store default currency is used.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionGetPaymentInfo(storeId: string, responseFormat?: string | undefined, currency?: string | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<CartPaymentInstruction>>;
    /**
     * Gets payment instruction for the punch-out payment.
     * @summary Get punch-out payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} orderId The order identifier.
     * @param {string} piId The payment instruction identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {string} [currency] The currency code to use for example, currency&#x3D;USD. If no currency code is specified, the store default currency is used.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionGetPunchoutPaymentInfo(storeId: string, orderId: string, piId: string, responseFormat?: string | undefined, currency?: string | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<CartPaymentInstruction>>;
    /**
     * Gets sensitive data mask information for plain string.
     * @summary Get sensitive data mask information
     * @param {string} storeId The store identifier.
     * @param {string} plainString The plain string for the sensitive data.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {string} [profileName] Profile name. Profiles determine the subset of data returned by a query.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionGetSensitiveDataMaskByPlainString(storeId: string, plainString: string, responseFormat?: string | undefined, profileName?: string | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ComIbmCommerceEdpBeansEDPSensitiveDataMaskHelperDataBeanIBMSensitiveDataMaskByPlainString>>;
    /**
     * Processes punch-out call back requests.
     * @summary Process punch-out call back request
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionPunchoutPaymentCallBack(storeId: string, responseFormat?: string | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     * Processes the punch-out payment requests.
     * @summary Process payment punch-out request
     * @param {string} storeId The store identifier.
     * @param {string} orderId The order identifier.
     * @param {string} piId The payment instruction identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionRepay(storeId: string, orderId: string, piId: string, responseFormat?: string | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     * Updates a payment instruction in the shopping cart.
     * @summary Update payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {CartPaymentInstruction} [body] Request body.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionUpdatePaymentInstruction(storeId: string, responseFormat?: string | undefined, body?: CartPaymentInstruction | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ComIbmCommerceRestOrderHandlerPaymentInstructionHandlerPaymentInstructionList>>;
    /**
     * Gets payment instructions for the shopping cart.
     * @summary fetch payment token data.
     * @param {string} storeId The store identifier.
     * @param {string} paymentToken payment_token
     * @param {string} paymentMethod payment_method
     * @param {string} [responseFormat] The response format. If the request has an input body, that body must also use the format specified in \&quot;responseFormat\&quot;. Valid values include \&quot;json\&quot; and \&quot;xml\&quot; without the quotes. If the responseFormat isn\&#39;t specified, the \&quot;accept\&quot; HTTP header shall be used to determine the format of the response. If the \&quot;accept\&quot; HTTP header isn\&#39;t specified as well, the default response format shall be in json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    storeStoreIdCartSelfPaymentInstructionPaymentTokenGet(storeId: string, paymentToken: string, paymentMethod: string, responseFormat?: string | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     * Gets sensitive data mask information for plain string.
     * @summary Get sensitive data mask information
     * @param {string} storeId The store identifier.
     * @param {string} [profileName] The plain string for the sensitive data.
     * @param {string} [responseFormat] The response format. If the request has an input body, that body must also use the format specified in \&quot;responseFormat\&quot;. Valid values include \&quot;json\&quot; and \&quot;xml\&quot; without the quotes. If the responseFormat isn\&#39;t specified, the \&quot;accept\&quot; HTTP header shall be used to determine the format of the response. If the \&quot;accept\&quot; HTTP header isn\&#39;t specified as well, the default response format shall be in json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    storeStoreIdCartSelfPaymentInstructionSensitiveDataMaskByPlainStringGet(storeId: string, profileName?: string | undefined, responseFormat?: string | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ComIbmCommerceEdpBeansEDPSensitiveDataMaskHelperDataBeanIBMSensitiveDataMaskByPlainString>>;
};
/**
 * PaymentInstructionApi - factory interface
 * @export
 */
export declare const PaymentInstructionApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Adds payment instructions to the shopping cart.
     * @summary Add payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {CartPaymentInstruction} [body] The body data required for the REST method.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionAddPaymentInstruction(storeId: string, responseFormat?: string | undefined, body?: CartPaymentInstruction | undefined, options?: any): AxiosPromise<ComIbmCommerceRestOrderHandlerPaymentInstructionHandlerPaymentInstructionList>;
    createRazorPayOrder(storeId: string, responseFormat?: string | undefined, body?: any, options?: any): AxiosPromise<ComIbmCommerceRestOrderHandlerPaymentInstructionHandlerPaymentInstructionList>;
    /**
     * Deletes all payment instructions from the shopping cart.
     * @summary Delete payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionDeleteAllPaymentInstructions(storeId: string, responseFormat?: string | undefined, options?: any): AxiosPromise<void>;
    /**
     * Deletes payment instructions from the shopping cart.
     * @summary Delete payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} paymentInstructionId Payment instruction identifier to delete.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionDeletePaymentInstruction(storeId: string, paymentInstructionId: string, responseFormat?: string | undefined, options?: any): AxiosPromise<void>;
    /**
     * Gets payment instructions for the shopping cart.
     * @summary Get payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {string} [currency] The currency code to use for example, currency&#x3D;USD. If no currency code is specified, the store default currency is used.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionGetPaymentInfo(storeId: string, responseFormat?: string | undefined, currency?: string | undefined, options?: any): AxiosPromise<CartPaymentInstruction>;
    /**
     * Gets payment instruction for the punch-out payment.
     * @summary Get punch-out payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} orderId The order identifier.
     * @param {string} piId The payment instruction identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {string} [currency] The currency code to use for example, currency&#x3D;USD. If no currency code is specified, the store default currency is used.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionGetPunchoutPaymentInfo(storeId: string, orderId: string, piId: string, responseFormat?: string | undefined, currency?: string | undefined, options?: any): AxiosPromise<CartPaymentInstruction>;
    /**
     * Gets sensitive data mask information for plain string.
     * @summary Get sensitive data mask information
     * @param {string} storeId The store identifier.
     * @param {string} plainString The plain string for the sensitive data.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {string} [profileName] Profile name. Profiles determine the subset of data returned by a query.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionGetSensitiveDataMaskByPlainString(storeId: string, plainString: string, responseFormat?: string | undefined, profileName?: string | undefined, options?: any): AxiosPromise<ComIbmCommerceEdpBeansEDPSensitiveDataMaskHelperDataBeanIBMSensitiveDataMaskByPlainString>;
    /**
     * Processes punch-out call back requests.
     * @summary Process punch-out call back request
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionPunchoutPaymentCallBack(storeId: string, responseFormat?: string | undefined, options?: any): AxiosPromise<void>;
    /**
     * Processes the punch-out payment requests.
     * @summary Process payment punch-out request
     * @param {string} storeId The store identifier.
     * @param {string} orderId The order identifier.
     * @param {string} piId The payment instruction identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionRepay(storeId: string, orderId: string, piId: string, responseFormat?: string | undefined, options?: any): AxiosPromise<void>;
    /**
     * Updates a payment instruction in the shopping cart.
     * @summary Update payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {CartPaymentInstruction} [body] Request body.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInstructionUpdatePaymentInstruction(storeId: string, responseFormat?: string | undefined, body?: CartPaymentInstruction | undefined, options?: any): AxiosPromise<ComIbmCommerceRestOrderHandlerPaymentInstructionHandlerPaymentInstructionList>;
    /**
     * Gets payment instructions for the shopping cart.
     * @summary fetch payment token data.
     * @param {string} storeId The store identifier.
     * @param {string} paymentToken payment_token
     * @param {string} paymentMethod payment_method
     * @param {string} [responseFormat] The response format. If the request has an input body, that body must also use the format specified in \&quot;responseFormat\&quot;. Valid values include \&quot;json\&quot; and \&quot;xml\&quot; without the quotes. If the responseFormat isn\&#39;t specified, the \&quot;accept\&quot; HTTP header shall be used to determine the format of the response. If the \&quot;accept\&quot; HTTP header isn\&#39;t specified as well, the default response format shall be in json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    storeStoreIdCartSelfPaymentInstructionPaymentTokenGet(storeId: string, paymentToken: string, paymentMethod: string, responseFormat?: string | undefined, options?: any): AxiosPromise<void>;
    /**
     * Gets sensitive data mask information for plain string.
     * @summary Get sensitive data mask information
     * @param {string} storeId The store identifier.
     * @param {string} [profileName] The plain string for the sensitive data.
     * @param {string} [responseFormat] The response format. If the request has an input body, that body must also use the format specified in \&quot;responseFormat\&quot;. Valid values include \&quot;json\&quot; and \&quot;xml\&quot; without the quotes. If the responseFormat isn\&#39;t specified, the \&quot;accept\&quot; HTTP header shall be used to determine the format of the response. If the \&quot;accept\&quot; HTTP header isn\&#39;t specified as well, the default response format shall be in json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    storeStoreIdCartSelfPaymentInstructionSensitiveDataMaskByPlainStringGet(storeId: string, profileName?: string | undefined, responseFormat?: string | undefined, options?: any): AxiosPromise<ComIbmCommerceEdpBeansEDPSensitiveDataMaskHelperDataBeanIBMSensitiveDataMaskByPlainString>;
};
/**
 * PaymentInstructionApi - object-oriented interface
 * @export
 * @class PaymentInstructionApi
 * @extends {BaseAPI}
 */
export declare class PaymentInstructionApi extends BaseAPI {
    /**
     * Adds payment instructions to the shopping cart.
     * @summary Add payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {CartPaymentInstruction} [body] The body data required for the REST method.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentInstructionApi
     */
    paymentInstructionAddPaymentInstruction(storeId: string, responseFormat?: string, body?: CartPaymentInstruction, options?: any): Promise<import("axios").AxiosResponse<ComIbmCommerceRestOrderHandlerPaymentInstructionHandlerPaymentInstructionList>>;
    createRazorPayOrder(storeId: string, responseFormat?: string, body?: CreateRazorPayOrder, options?: any): Promise<import("axios").AxiosResponse<ComIbmCommerceRestOrderHandlerPaymentInstructionHandlerPaymentInstructionList>>;
    /**
     * Deletes all payment instructions from the shopping cart.
     * @summary Delete payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentInstructionApi
     */
    paymentInstructionDeleteAllPaymentInstructions(storeId: string, responseFormat?: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Deletes payment instructions from the shopping cart.
     * @summary Delete payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} paymentInstructionId Payment instruction identifier to delete.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentInstructionApi
     */
    paymentInstructionDeletePaymentInstruction(storeId: string, paymentInstructionId: string, responseFormat?: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Gets payment instructions for the shopping cart.
     * @summary Get payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {string} [currency] The currency code to use for example, currency&#x3D;USD. If no currency code is specified, the store default currency is used.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentInstructionApi
     */
    paymentInstructionGetPaymentInfo(storeId: string, responseFormat?: string, currency?: string, options?: any): Promise<import("axios").AxiosResponse<CartPaymentInstruction>>;
    /**
     * Gets payment instruction for the punch-out payment.
     * @summary Get punch-out payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} orderId The order identifier.
     * @param {string} piId The payment instruction identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {string} [currency] The currency code to use for example, currency&#x3D;USD. If no currency code is specified, the store default currency is used.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentInstructionApi
     */
    paymentInstructionGetPunchoutPaymentInfo(storeId: string, orderId: string, piId: string, responseFormat?: string, currency?: string, options?: any): Promise<import("axios").AxiosResponse<CartPaymentInstruction>>;
    /**
     * Gets sensitive data mask information for plain string.
     * @summary Get sensitive data mask information
     * @param {string} storeId The store identifier.
     * @param {string} plainString The plain string for the sensitive data.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {string} [profileName] Profile name. Profiles determine the subset of data returned by a query.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentInstructionApi
     */
    paymentInstructionGetSensitiveDataMaskByPlainString(storeId: string, plainString: string, responseFormat?: string, profileName?: string, options?: any): Promise<import("axios").AxiosResponse<ComIbmCommerceEdpBeansEDPSensitiveDataMaskHelperDataBeanIBMSensitiveDataMaskByPlainString>>;
    /**
     * Processes punch-out call back requests.
     * @summary Process punch-out call back request
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentInstructionApi
     */
    paymentInstructionPunchoutPaymentCallBack(storeId: string, responseFormat?: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Processes the punch-out payment requests.
     * @summary Process payment punch-out request
     * @param {string} storeId The store identifier.
     * @param {string} orderId The order identifier.
     * @param {string} piId The payment instruction identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentInstructionApi
     */
    paymentInstructionRepay(storeId: string, orderId: string, piId: string, responseFormat?: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Updates a payment instruction in the shopping cart.
     * @summary Update payment instructions
     * @param {string} storeId The store identifier.
     * @param {string} [responseFormat] The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.
     * @param {CartPaymentInstruction} [body] Request body.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentInstructionApi
     */
    paymentInstructionUpdatePaymentInstruction(storeId: string, responseFormat?: string, body?: CartPaymentInstruction, options?: any): Promise<import("axios").AxiosResponse<ComIbmCommerceRestOrderHandlerPaymentInstructionHandlerPaymentInstructionList>>;
    /**
     * Gets payment instructions for the shopping cart.
     * @summary fetch payment token data.
     * @param {string} storeId The store identifier.
     * @param {string} paymentToken payment_token
     * @param {string} paymentMethod payment_method
     * @param {string} [responseFormat] The response format. If the request has an input body, that body must also use the format specified in \&quot;responseFormat\&quot;. Valid values include \&quot;json\&quot; and \&quot;xml\&quot; without the quotes. If the responseFormat isn\&#39;t specified, the \&quot;accept\&quot; HTTP header shall be used to determine the format of the response. If the \&quot;accept\&quot; HTTP header isn\&#39;t specified as well, the default response format shall be in json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentInstructionApi
     */
    storeStoreIdCartSelfPaymentInstructionPaymentTokenGet(storeId: string, paymentToken: string, paymentMethod: string, responseFormat?: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Gets sensitive data mask information for plain string.
     * @summary Get sensitive data mask information
     * @param {string} storeId The store identifier.
     * @param {string} [profileName] The plain string for the sensitive data.
     * @param {string} [responseFormat] The response format. If the request has an input body, that body must also use the format specified in \&quot;responseFormat\&quot;. Valid values include \&quot;json\&quot; and \&quot;xml\&quot; without the quotes. If the responseFormat isn\&#39;t specified, the \&quot;accept\&quot; HTTP header shall be used to determine the format of the response. If the \&quot;accept\&quot; HTTP header isn\&#39;t specified as well, the default response format shall be in json.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentInstructionApi
     */
    storeStoreIdCartSelfPaymentInstructionSensitiveDataMaskByPlainStringGet(storeId: string, profileName?: string, responseFormat?: string, options?: any): Promise<import("axios").AxiosResponse<ComIbmCommerceEdpBeansEDPSensitiveDataMaskHelperDataBeanIBMSensitiveDataMaskByPlainString>>;
}
